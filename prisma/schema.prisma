generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
model day_ahead_prices {
  time           DateTime @default(now()) @db.Timestamptz(6)
  currency       String
  in_domain      String
  out_domain     String
  price          Float    @db.Real
  measure_unit   String   @db.VarChar(3)
  source         String?
  tax_percentage Float    @default(24) @db.Real

  @@unique([time, in_domain, out_domain])
  @@index([time(sort: Desc)])
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
model energies {
  time                DateTime @default(now()) @db.Timestamptz(6)
  metering_point_code String
  measure_type        Int
  contract_type       Int      @db.SmallInt
  source              String?
  measure_unit        String   @db.VarChar(3)
  value               Float?   @db.Real
  energy_basic_fee    Float?   @db.Real
  energy_fee          Float?   @db.Real
  energy_margin       Float?   @db.Real
  transfer_basic_fee  Float?   @db.Real
  transfer_fee        Float?   @db.Real
  transfer_tax_fee    Float?   @db.Real
  tax_percentage      Float    @default(24) @db.Real
  night               Boolean  @default(false)
  spot_price          Float?   @db.Real

  @@unique([time, metering_point_code, measure_type])
  @@index([time(sort: Desc)])
}

model account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  refresh_expires_in Int?
  user               user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model user {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      account[]
  sessions      session[]
  accesses      userAccess[]
}

model verification_token {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
model melcloud {
  time                          DateTime @default(now()) @db.Timestamptz(6)
  device_id                     Int
  device_type                   Int      @db.SmallInt
  power                         Boolean
  offline                       Boolean
  room_temperature              Float    @db.Real
  set_temperature               Float    @db.Real
  last_communication            String
  actual_fan_speed              Int      @db.SmallInt
  fan_speed                     Int      @db.SmallInt
  automatic_fan_speed           Boolean?
  vane_vertical_direction       Int      @db.SmallInt
  vane_vertical_swing           Boolean?
  vane_horizontal_direction     Int      @db.SmallInt
  vane_horizontal_swing         Boolean?
  operation_mode                Int      @db.SmallInt
  in_standby_mode               Boolean
  heating_energy_consumed_rate1 Float?   @db.Real
  heating_energy_consumed_rate2 Float?   @db.Real
  cooling_energy_consumed_rate1 Float?   @db.Real
  cooling_energy_consumed_rate2 Float?   @db.Real
  auto_energy_consumed_rate1    Float?   @db.Real
  auto_energy_consumed_rate2    Float?   @db.Real
  dry_energy_consumed_rate1     Float?   @db.Real
  dry_energy_consumed_rate2     Float?   @db.Real
  fan_energy_consumed_rate1     Float?   @db.Real
  fan_energy_consumed_rate2     Float?   @db.Real
  other_energy_consumed_rate1   Float?   @db.Real
  other_energy_consumed_rate2   Float?   @db.Real
  current_energy_consumed       Float?   @db.Real
  current_energy_mode           Int?     @db.SmallInt
  energy_correction_model       Float?   @db.Real
  energy_correction_active      Boolean?
  wifi_signal_strength          Float?   @db.Real
  wifi_adapter_status           String?
  has_error                     Boolean?

  @@unique([time, device_id])
  @@index([time(sort: Desc)])
}


enum accessType {
  WATTIVAHTI_CONSUMPTION
  WATTIVAHTI_PRODUCTION
  SOLARMAN
  MELCLOUD
}

model userAccess {
    id        Int      @id @default(autoincrement())
    accessId      String
    type      accessType
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user   user   @relation(fields: [userId], references: [id])
    userId String

    serviceAccess   serviceAccess   @relation(fields: [accessId], references: [accessId])

    @@index([accessId])
}

model serviceAccess {
    id                  Int      @id @default(autoincrement())
    accessId            String @unique
    accessName          String?
    type                accessType
    email               String?
    password            String?
    token               String?
    tokenExpiresAt      DateTime?
    refreshToken        String?
    refreshTokenExpiresAt DateTime?
    createdAt           DateTime @default(now())
    updatedAt           DateTime @updatedAt

    userAccesses userAccess[]

    @@index([accessId])
}
